Per id accuracy: 0.01/1457, 0.8/2034, 1.0/1807, 1.0/1308, 0.97/1194, 1.0/1194, 0.98/1096, 1.0/1097, 1.0/1077, 1.0/1077, 1.0/1077, 1.0/867, 0.97/687, 1.0/667, 1.0/667, 1.0/667, 1.0/667, 0.99/677, 0.92/588, 0.96/548, 1.0/538, 1.0/538, 1.0/538, 0.73/518, 0.98/428, 0.93/312, 0.74/282, 0.72/298, 0.11/175, 0.18/132, 0.8/137, 0.0/150, 0.0/181, 0.5/141, 0.0/76, 0.0/38, 
 Average duration: 1082.75 us
Amount of times correct: 
21798 out of 24936Percentage correct: 0.87
MSE loss: 
274.15784575364785=================================================================
Layer (type:depth-idx)                   Param #
=================================================================
TCN                                      --
├─TemporalConvNet: 1-1                   --
│    └─Sequential: 2-1                   --
│    │    └─TemporalBlock: 3-1           5,328
│    │    └─TemporalBlock: 3-2           5,328
├─Linear: 1-2                            1,332
├─Sigmoid: 1-3                           --
=================================================================
Total params: 11,988
Trainable params: 11,988
Non-trainable params: 0
=================================================================TCN(
  (tcn): TemporalConvNet(
    (network): Sequential(
      (0): TemporalBlock(
        (conv1): Conv1d(36, 36, kernel_size=(2,), stride=(1,), padding=(1,))
        (chomp1): Chomp1d()
        (relu1): ReLU()
        (dropout1): Dropout(p=0.1, inplace=False)
        (conv2): Conv1d(36, 36, kernel_size=(2,), stride=(1,), padding=(1,))
        (chomp2): Chomp1d()
        (relu2): ReLU()
        (dropout2): Dropout(p=0.1, inplace=False)
        (net): Sequential(
          (0): Conv1d(36, 36, kernel_size=(2,), stride=(1,), padding=(1,))
          (1): Chomp1d()
          (2): ReLU()
          (3): Dropout(p=0.1, inplace=False)
          (4): Conv1d(36, 36, kernel_size=(2,), stride=(1,), padding=(1,))
          (5): Chomp1d()
          (6): ReLU()
          (7): Dropout(p=0.1, inplace=False)
        )
        (relu): ReLU()
      )
      (1): TemporalBlock(
        (conv1): Conv1d(36, 36, kernel_size=(2,), stride=(1,), padding=(2,), dilation=(2,))
        (chomp1): Chomp1d()
        (relu1): ReLU()
        (dropout1): Dropout(p=0.1, inplace=False)
        (conv2): Conv1d(36, 36, kernel_size=(2,), stride=(1,), padding=(2,), dilation=(2,))
        (chomp2): Chomp1d()
        (relu2): ReLU()
        (dropout2): Dropout(p=0.1, inplace=False)
        (net): Sequential(
          (0): Conv1d(36, 36, kernel_size=(2,), stride=(1,), padding=(2,), dilation=(2,))
          (1): Chomp1d()
          (2): ReLU()
          (3): Dropout(p=0.1, inplace=False)
          (4): Conv1d(36, 36, kernel_size=(2,), stride=(1,), padding=(2,), dilation=(2,))
          (5): Chomp1d()
          (6): ReLU()
          (7): Dropout(p=0.1, inplace=False)
        )
        (relu): ReLU()
      )
    )
  )
  (linear): Linear(in_features=36, out_features=36, bias=True)
  (sig): Sigmoid()
)